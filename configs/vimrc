" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

syntax on
filetype on
au BufNewFile,BufRead *.pg set filetype=gnuplot

set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set nocompatible              " be iMproved, required

set tabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smartindent
set nowrap
set laststatus=2
set noro  " Open git vimdiffs without readonly
set nojoinspaces " No double space after period

"Do not search included boost headers during Tab completion
set include=^\\s*#\\s*include\ \\(<boost/\\)\\@!

"Remap split switching to use Ctrl
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-l> :wincmd l<CR>

" Use tab and shift-tab to move between buffers
nnoremap  <silent> <s-tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bnext<CR>

" Quit all vim splits
nmap qq :qa<Enter>

" Disable recording
map q <Nop>

" Go backwards with e
map e b

" Prevent carpal tunnel
nmap ; :
inoremap - _
inoremap _ -
cnoremap - _
cnoremap _ -

" Colorscheme
colorscheme apprentice
set background=light
hi Comment ctermfg=Cyan

let &colorcolumn=join(range(81,81),",")
hi ColorColumn ctermbg=235

" Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'auto-pairs-gentle'
Plugin 'skwp/greplace.vim'
Plugin 'kopischke/vim-fetch'
Plugin 'cmdline-completion'
Plugin 'easymotion/vim-easymotion'
let g:EasyMotion_leader_key = '<Space>'

" Project-specific vimrc
Plugin 'embear/vim-localvimrc'
let g:localvimrc_whitelist='.*'

" DirDiff, only for source code files
Plugin 'will133/vim-dirdiff'
let g:DirDiffExcludes = "*.o,*.lo,*.Plo,*.a,*.so,*.in,*.am,*.log,*.status,autom4te.cache,*.1,*.0"

" YouCompleteMe
if v:version > 704 || (v:version == 704 && has('patch143'))
  Plugin 'Valloric/YouCompleteMe'
  filetype off                  " required
  set completeopt-=preview " Disable YCM scratch preview
  let g:ycm_confirm_extra_conf=0 " Disable YCM config load prompt
  let g:ycm_complete_in_strings = 1
  let g:ycm_complete_in_comments = 1
endif

" Fuzzy file open
set rtp+=~/.fzf
let $FZF_DEFAULT_COMMAND = 'ag -g ""' " Respect .gitignore. Needs bashrc changes
let g:fzf_action = {'enter': 'vsplit'}

" Fuzzy file open vertical and horizontal splits
nmap :fsp :FZF<Enter>
nmap :aaa :FZF<Enter>
nnoremap <silent> <Leader>s :call fzf#run({'down': '40%', 'sink': 'leftabove split'})<CR>
noremap cc ciw
noremap <space> :

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

"Use TAB to complete when typing words, else inserts TABs as usual.
"Uses dictionary and source files to find matching words to complete.
function! Tab_Or_Complete()
  if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
    return "\<C-N>"
  else
    return "\<Tab>"
  endif
endfunction
:inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>

"Ignore whitespace im vimdiff
"if &diff
"    set diffopt+=iwhite
"endif

" Automatically open, but do not go to (if there are errors) the quickfix /
" location list window, or close it when is has become empty.
"
" Note: Must allow nesting of autocmds to enable any customizations for quickfix
" buffers.
" Note: Normally, :cwindow jumps to the quickfix window if the command opens it
" (but not if it's already open). However, as part of the autocmd, this doesn't
" seem to happen.
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow

" Enable spellcheck for tex files only
autocmd BufRead,BufNewFile *.tex setlocal spell

" Don't go to last edit location
if exists('#fedora')
  autocmd! fedora BufReadPost *
endif

"set tags=./tags,tags;

call vundle#end()
filetype plugin indent on
